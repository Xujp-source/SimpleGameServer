// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Battle_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Battle_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Battle_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Battle_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Battle_2eproto;
class CommandAtkReq;
class CommandAtkReqDefaultTypeInternal;
extern CommandAtkReqDefaultTypeInternal _CommandAtkReq_default_instance_;
class CommandChangeCard;
class CommandChangeCardDefaultTypeInternal;
extern CommandChangeCardDefaultTypeInternal _CommandChangeCard_default_instance_;
class CommandDefineReq;
class CommandDefineReqDefaultTypeInternal;
extern CommandDefineReqDefaultTypeInternal _CommandDefineReq_default_instance_;
class CommandEscapeReq;
class CommandEscapeReqDefaultTypeInternal;
extern CommandEscapeReqDefaultTypeInternal _CommandEscapeReq_default_instance_;
class CommandSkillReq;
class CommandSkillReqDefaultTypeInternal;
extern CommandSkillReqDefaultTypeInternal _CommandSkillReq_default_instance_;
class CommandUsingReq;
class CommandUsingReqDefaultTypeInternal;
extern CommandUsingReqDefaultTypeInternal _CommandUsingReq_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CommandAtkReq* Arena::CreateMaybeMessage<::CommandAtkReq>(Arena*);
template<> ::CommandChangeCard* Arena::CreateMaybeMessage<::CommandChangeCard>(Arena*);
template<> ::CommandDefineReq* Arena::CreateMaybeMessage<::CommandDefineReq>(Arena*);
template<> ::CommandEscapeReq* Arena::CreateMaybeMessage<::CommandEscapeReq>(Arena*);
template<> ::CommandSkillReq* Arena::CreateMaybeMessage<::CommandSkillReq>(Arena*);
template<> ::CommandUsingReq* Arena::CreateMaybeMessage<::CommandUsingReq>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CommandAtkReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommandAtkReq) */ {
 public:
  inline CommandAtkReq() : CommandAtkReq(nullptr) {};
  virtual ~CommandAtkReq();

  CommandAtkReq(const CommandAtkReq& from);
  CommandAtkReq(CommandAtkReq&& from) noexcept
    : CommandAtkReq() {
    *this = ::std::move(from);
  }

  inline CommandAtkReq& operator=(const CommandAtkReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandAtkReq& operator=(CommandAtkReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommandAtkReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandAtkReq* internal_default_instance() {
    return reinterpret_cast<const CommandAtkReq*>(
               &_CommandAtkReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CommandAtkReq& a, CommandAtkReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandAtkReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandAtkReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandAtkReq* New() const final {
    return CreateMaybeMessage<CommandAtkReq>(nullptr);
  }

  CommandAtkReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandAtkReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandAtkReq& from);
  void MergeFrom(const CommandAtkReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandAtkReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommandAtkReq";
  }
  protected:
  explicit CommandAtkReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Battle_2eproto);
    return ::descriptor_table_Battle_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kCmdFieldNumber = 2,
  };
  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 cmd = 2;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommandAtkReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Battle_2eproto;
};
// -------------------------------------------------------------------

class CommandSkillReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommandSkillReq) */ {
 public:
  inline CommandSkillReq() : CommandSkillReq(nullptr) {};
  virtual ~CommandSkillReq();

  CommandSkillReq(const CommandSkillReq& from);
  CommandSkillReq(CommandSkillReq&& from) noexcept
    : CommandSkillReq() {
    *this = ::std::move(from);
  }

  inline CommandSkillReq& operator=(const CommandSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandSkillReq& operator=(CommandSkillReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommandSkillReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandSkillReq* internal_default_instance() {
    return reinterpret_cast<const CommandSkillReq*>(
               &_CommandSkillReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CommandSkillReq& a, CommandSkillReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandSkillReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandSkillReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandSkillReq* New() const final {
    return CreateMaybeMessage<CommandSkillReq>(nullptr);
  }

  CommandSkillReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandSkillReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandSkillReq& from);
  void MergeFrom(const CommandSkillReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandSkillReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommandSkillReq";
  }
  protected:
  explicit CommandSkillReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Battle_2eproto);
    return ::descriptor_table_Battle_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kCmdFieldNumber = 2,
    kSkillidFieldNumber = 3,
  };
  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 cmd = 2;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 skillid = 3;
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::int32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommandSkillReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  ::PROTOBUF_NAMESPACE_ID::int32 skillid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Battle_2eproto;
};
// -------------------------------------------------------------------

class CommandDefineReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommandDefineReq) */ {
 public:
  inline CommandDefineReq() : CommandDefineReq(nullptr) {};
  virtual ~CommandDefineReq();

  CommandDefineReq(const CommandDefineReq& from);
  CommandDefineReq(CommandDefineReq&& from) noexcept
    : CommandDefineReq() {
    *this = ::std::move(from);
  }

  inline CommandDefineReq& operator=(const CommandDefineReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandDefineReq& operator=(CommandDefineReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommandDefineReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandDefineReq* internal_default_instance() {
    return reinterpret_cast<const CommandDefineReq*>(
               &_CommandDefineReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CommandDefineReq& a, CommandDefineReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandDefineReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandDefineReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandDefineReq* New() const final {
    return CreateMaybeMessage<CommandDefineReq>(nullptr);
  }

  CommandDefineReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandDefineReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandDefineReq& from);
  void MergeFrom(const CommandDefineReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandDefineReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommandDefineReq";
  }
  protected:
  explicit CommandDefineReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Battle_2eproto);
    return ::descriptor_table_Battle_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kCmdFieldNumber = 2,
  };
  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 cmd = 2;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommandDefineReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Battle_2eproto;
};
// -------------------------------------------------------------------

class CommandUsingReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommandUsingReq) */ {
 public:
  inline CommandUsingReq() : CommandUsingReq(nullptr) {};
  virtual ~CommandUsingReq();

  CommandUsingReq(const CommandUsingReq& from);
  CommandUsingReq(CommandUsingReq&& from) noexcept
    : CommandUsingReq() {
    *this = ::std::move(from);
  }

  inline CommandUsingReq& operator=(const CommandUsingReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandUsingReq& operator=(CommandUsingReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommandUsingReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandUsingReq* internal_default_instance() {
    return reinterpret_cast<const CommandUsingReq*>(
               &_CommandUsingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CommandUsingReq& a, CommandUsingReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandUsingReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandUsingReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandUsingReq* New() const final {
    return CreateMaybeMessage<CommandUsingReq>(nullptr);
  }

  CommandUsingReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandUsingReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandUsingReq& from);
  void MergeFrom(const CommandUsingReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandUsingReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommandUsingReq";
  }
  protected:
  explicit CommandUsingReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Battle_2eproto);
    return ::descriptor_table_Battle_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kItemuidFieldNumber = 3,
    kCmdFieldNumber = 2,
    kCountFieldNumber = 4,
  };
  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 itemuid = 3;
  void clear_itemuid();
  ::PROTOBUF_NAMESPACE_ID::uint64 itemuid() const;
  void set_itemuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_itemuid() const;
  void _internal_set_itemuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 cmd = 2;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 count = 4;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommandUsingReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 itemuid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Battle_2eproto;
};
// -------------------------------------------------------------------

class CommandChangeCard PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommandChangeCard) */ {
 public:
  inline CommandChangeCard() : CommandChangeCard(nullptr) {};
  virtual ~CommandChangeCard();

  CommandChangeCard(const CommandChangeCard& from);
  CommandChangeCard(CommandChangeCard&& from) noexcept
    : CommandChangeCard() {
    *this = ::std::move(from);
  }

  inline CommandChangeCard& operator=(const CommandChangeCard& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandChangeCard& operator=(CommandChangeCard&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommandChangeCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandChangeCard* internal_default_instance() {
    return reinterpret_cast<const CommandChangeCard*>(
               &_CommandChangeCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CommandChangeCard& a, CommandChangeCard& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandChangeCard* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandChangeCard* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandChangeCard* New() const final {
    return CreateMaybeMessage<CommandChangeCard>(nullptr);
  }

  CommandChangeCard* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandChangeCard>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandChangeCard& from);
  void MergeFrom(const CommandChangeCard& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandChangeCard* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommandChangeCard";
  }
  protected:
  explicit CommandChangeCard(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Battle_2eproto);
    return ::descriptor_table_Battle_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kCarduidFieldNumber = 3,
    kCmdFieldNumber = 2,
  };
  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 carduid = 3;
  void clear_carduid();
  ::PROTOBUF_NAMESPACE_ID::uint64 carduid() const;
  void set_carduid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_carduid() const;
  void _internal_set_carduid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 cmd = 2;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommandChangeCard)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 carduid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Battle_2eproto;
};
// -------------------------------------------------------------------

class CommandEscapeReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CommandEscapeReq) */ {
 public:
  inline CommandEscapeReq() : CommandEscapeReq(nullptr) {};
  virtual ~CommandEscapeReq();

  CommandEscapeReq(const CommandEscapeReq& from);
  CommandEscapeReq(CommandEscapeReq&& from) noexcept
    : CommandEscapeReq() {
    *this = ::std::move(from);
  }

  inline CommandEscapeReq& operator=(const CommandEscapeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandEscapeReq& operator=(CommandEscapeReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommandEscapeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandEscapeReq* internal_default_instance() {
    return reinterpret_cast<const CommandEscapeReq*>(
               &_CommandEscapeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CommandEscapeReq& a, CommandEscapeReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandEscapeReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandEscapeReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommandEscapeReq* New() const final {
    return CreateMaybeMessage<CommandEscapeReq>(nullptr);
  }

  CommandEscapeReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommandEscapeReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommandEscapeReq& from);
  void MergeFrom(const CommandEscapeReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandEscapeReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CommandEscapeReq";
  }
  protected:
  explicit CommandEscapeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Battle_2eproto);
    return ::descriptor_table_Battle_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kCmdFieldNumber = 2,
  };
  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 cmd = 2;
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CommandEscapeReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Battle_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommandAtkReq

// uint64 uid = 1;
inline void CommandAtkReq::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandAtkReq::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandAtkReq::uid() const {
  // @@protoc_insertion_point(field_get:CommandAtkReq.uid)
  return _internal_uid();
}
inline void CommandAtkReq::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void CommandAtkReq::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:CommandAtkReq.uid)
}

// int32 cmd = 2;
inline void CommandAtkReq::clear_cmd() {
  cmd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandAtkReq::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandAtkReq::cmd() const {
  // @@protoc_insertion_point(field_get:CommandAtkReq.cmd)
  return _internal_cmd();
}
inline void CommandAtkReq::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_ = value;
}
inline void CommandAtkReq::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:CommandAtkReq.cmd)
}

// -------------------------------------------------------------------

// CommandSkillReq

// uint64 uid = 1;
inline void CommandSkillReq::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandSkillReq::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandSkillReq::uid() const {
  // @@protoc_insertion_point(field_get:CommandSkillReq.uid)
  return _internal_uid();
}
inline void CommandSkillReq::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void CommandSkillReq::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:CommandSkillReq.uid)
}

// int32 cmd = 2;
inline void CommandSkillReq::clear_cmd() {
  cmd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandSkillReq::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandSkillReq::cmd() const {
  // @@protoc_insertion_point(field_get:CommandSkillReq.cmd)
  return _internal_cmd();
}
inline void CommandSkillReq::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_ = value;
}
inline void CommandSkillReq::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:CommandSkillReq.cmd)
}

// int32 skillid = 3;
inline void CommandSkillReq::clear_skillid() {
  skillid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandSkillReq::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandSkillReq::skillid() const {
  // @@protoc_insertion_point(field_get:CommandSkillReq.skillid)
  return _internal_skillid();
}
inline void CommandSkillReq::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  skillid_ = value;
}
inline void CommandSkillReq::set_skillid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:CommandSkillReq.skillid)
}

// -------------------------------------------------------------------

// CommandDefineReq

// uint64 uid = 1;
inline void CommandDefineReq::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandDefineReq::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandDefineReq::uid() const {
  // @@protoc_insertion_point(field_get:CommandDefineReq.uid)
  return _internal_uid();
}
inline void CommandDefineReq::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void CommandDefineReq::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:CommandDefineReq.uid)
}

// int32 cmd = 2;
inline void CommandDefineReq::clear_cmd() {
  cmd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandDefineReq::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandDefineReq::cmd() const {
  // @@protoc_insertion_point(field_get:CommandDefineReq.cmd)
  return _internal_cmd();
}
inline void CommandDefineReq::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_ = value;
}
inline void CommandDefineReq::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:CommandDefineReq.cmd)
}

// -------------------------------------------------------------------

// CommandUsingReq

// uint64 uid = 1;
inline void CommandUsingReq::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandUsingReq::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandUsingReq::uid() const {
  // @@protoc_insertion_point(field_get:CommandUsingReq.uid)
  return _internal_uid();
}
inline void CommandUsingReq::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void CommandUsingReq::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:CommandUsingReq.uid)
}

// int32 cmd = 2;
inline void CommandUsingReq::clear_cmd() {
  cmd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandUsingReq::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandUsingReq::cmd() const {
  // @@protoc_insertion_point(field_get:CommandUsingReq.cmd)
  return _internal_cmd();
}
inline void CommandUsingReq::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_ = value;
}
inline void CommandUsingReq::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:CommandUsingReq.cmd)
}

// uint64 itemuid = 3;
inline void CommandUsingReq::clear_itemuid() {
  itemuid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandUsingReq::_internal_itemuid() const {
  return itemuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandUsingReq::itemuid() const {
  // @@protoc_insertion_point(field_get:CommandUsingReq.itemuid)
  return _internal_itemuid();
}
inline void CommandUsingReq::_internal_set_itemuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  itemuid_ = value;
}
inline void CommandUsingReq::set_itemuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_itemuid(value);
  // @@protoc_insertion_point(field_set:CommandUsingReq.itemuid)
}

// int32 count = 4;
inline void CommandUsingReq::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandUsingReq::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandUsingReq::count() const {
  // @@protoc_insertion_point(field_get:CommandUsingReq.count)
  return _internal_count();
}
inline void CommandUsingReq::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void CommandUsingReq::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CommandUsingReq.count)
}

// -------------------------------------------------------------------

// CommandChangeCard

// uint64 uid = 1;
inline void CommandChangeCard::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandChangeCard::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandChangeCard::uid() const {
  // @@protoc_insertion_point(field_get:CommandChangeCard.uid)
  return _internal_uid();
}
inline void CommandChangeCard::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void CommandChangeCard::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:CommandChangeCard.uid)
}

// int32 cmd = 2;
inline void CommandChangeCard::clear_cmd() {
  cmd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandChangeCard::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandChangeCard::cmd() const {
  // @@protoc_insertion_point(field_get:CommandChangeCard.cmd)
  return _internal_cmd();
}
inline void CommandChangeCard::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_ = value;
}
inline void CommandChangeCard::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:CommandChangeCard.cmd)
}

// uint64 carduid = 3;
inline void CommandChangeCard::clear_carduid() {
  carduid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandChangeCard::_internal_carduid() const {
  return carduid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandChangeCard::carduid() const {
  // @@protoc_insertion_point(field_get:CommandChangeCard.carduid)
  return _internal_carduid();
}
inline void CommandChangeCard::_internal_set_carduid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  carduid_ = value;
}
inline void CommandChangeCard::set_carduid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_carduid(value);
  // @@protoc_insertion_point(field_set:CommandChangeCard.carduid)
}

// -------------------------------------------------------------------

// CommandEscapeReq

// uint64 uid = 1;
inline void CommandEscapeReq::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandEscapeReq::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommandEscapeReq::uid() const {
  // @@protoc_insertion_point(field_get:CommandEscapeReq.uid)
  return _internal_uid();
}
inline void CommandEscapeReq::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void CommandEscapeReq::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:CommandEscapeReq.uid)
}

// int32 cmd = 2;
inline void CommandEscapeReq::clear_cmd() {
  cmd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandEscapeReq::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommandEscapeReq::cmd() const {
  // @@protoc_insertion_point(field_get:CommandEscapeReq.cmd)
  return _internal_cmd();
}
inline void CommandEscapeReq::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_ = value;
}
inline void CommandEscapeReq::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:CommandEscapeReq.cmd)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Battle_2eproto
